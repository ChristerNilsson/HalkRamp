// Generated by CoffeeScript 2.7.0
var S, X, Y, draw, draw_x, draw_y, draw_z, echo, horizontal, l, r, range, setup, vertical, xa, xb, xc, xd, xe, xf, xg, xz, ya, yb, yc, yd, ye, yf, yg, yh, yi;

echo = console.log;

range = _.range;

S = 10;

X = 0;

Y = 0;

xa = 0;

xb = 7.5;

xc = 12.5;

xd = 15;

xe = 17.5;

xf = 50;

xg = 85;

xz = 100;

ya = 1;

yb = 6;

yc = 39;

yd = 45;

ye = 0;

yf = 4;

yg = 5;

yh = 6;

yi = 10;

l = function(x1, y1, x2, y2) {
  return line(X + S * x1, Y + S * y1, X + S * x2, Y + S * y2);
};

r = function(x1, y1, x2, y2) {
  return rect(X + S * x1, Y + S * y1, X + S * x2, Y + S * y2);
};

vertical = function(x, y) {
  var i, j, k, len, len1, ref, ref1, results;
  r(x - 3, y, x + 3, y + 5);
  l(x, y + 5, x, y + 38);
  r(x - 3, y + 38, x + 3, y + 44);
  ref = range(11);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    l(x - 8, 7.5 + i * 3, x - 5.5, 9 + i * 3);
    l(x - 8, 7.5 + i * 3, x - 5.5, 6 + i * 3);
  }
  ref1 = range(11);
  results = [];
  for (k = 0, len1 = ref1.length; k < len1; k++) {
    i = ref1[k];
    l(x + 8, 7.5 + i * 3, x + 5.5, 9 + i * 3);
    results.push(l(x + 8, 7.5 + i * 3, x + 5.5, 6 + i * 3));
  }
  return results;
};

setup = function() {
  createCanvas(1200, 700);
  strokeWeight(1);
  noFill();
  return rectMode(CORNERS);
};

draw_z = function() {
  X = 20;
  Y = 20;
  r(xa, ya, xz, yb);
  r(xa, yc, xz, yd);
  vertical(xd, ya);
  vertical(xf, ya);
  return vertical(xg, ya);
};

horizontal = function(x, y) {
  r(x - 2.7, yf, x + 2.7, yg);
  push();
  strokeWeight(3);
  l(x, y, x - 7.5, yi);
  l(x, y, x + 7.5, yi);
  l(x - 4.5, yh + 0.2, x + 4.5, yh + 0.2);
  return pop();
};

// r x-4.2, yh, x+4.2, yh+1
draw_y = function() {
  X = 20;
  Y = 550;
  r(xa, yg, xz, yh);
  horizontal(xd, ye);
  horizontal(xf, ye);
  return horizontal(xg, ye);
};

draw_x = function() {
  var i, j, len, ref, results;
  X = 100;
  Y = ya + 20;
  push();
  strokeWeight(3);
  l(xz + 5, ya, xz + 5, yb);
  l(xz + 5, yc, xz + 5, yd);
  //l xz+3,ya, xz+3,yb
  //l xz+3,yc, xz+3,yd
  pop();
  r(xz + 3, ya, xz + 4, yb);
  r(xz + 4, ya, xz + 5, yb);
  r(xz + 3, yc, xz + 4, yd);
  r(xz + 4, yc, xz + 5, yd);
  l(xz, yb, xz + 7, yb);
  l(xz, yc, xz + 7, yc);
  l(xz, yb, xz, yc);
  ref = range(11);
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    l(xz + 9, 7.5 + i * 3, xz + 7, 9 + i * 3);
    results.push(l(xz + 9, 7.5 + i * 3, xz + 7, 6 + i * 3));
  }
  return results;
};

draw = function() {
  background(255);
  draw_z();
  draw_y();
  return draw_x();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\HalkRamp\coffee\sketch.coffee